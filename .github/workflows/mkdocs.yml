name: docs

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important: ensures tags are fetched

      - name: Get last 2 tags in descending order
        id: get_tags
        run: |
          # Ensure tags are up-to-date (especially if using shallow clones or older commits)
          git fetch --tags

          # Directly store last two tags into an array, sorted descending by version
          tags_array=( $(git tag --list "v*" --sort=-version:refname | head -n 2) )

          echo "Found tags (descending): ${tags_array[*]}"

          # Iterate over the array
          for tag in "${tags_array[@]}"; do
            echo "Processing tag: $tag"
          done

          # Optionally set them as an output (joined by commas):
          joined_tags="$(IFS=','; echo "${tags_array[*]}")"
          echo "tags=$joined_tags" >> $GITHUB_OUTPUT

      - name: Show usage of tags output
        run: |
          echo "Our last two tags are: ${{ steps.get_tags.outputs.tags }}"

      - name: Configure Git Credentials
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: 3.x

      # - name: Generate Cache ID
      #   run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      # - name: Restore Cache
      #   uses: actions/cache@v4
      #   with:
      #     key: mkdocs-material-${{ env.cache_id }}
      #     path: .cache
      #     restore-keys: |
      #       mkdocs-material-

      # - name: Install Dependencies
      #   run: |
      #     pip install \
      #       mkdocs-material \
      #       mike

      # - name: Deploy Docs
      #   run: mkdocs gh-deploy --force

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install mkdocs-material and mike
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material mike

      - name: Deploy docs for the last 2 tags
        run: |
          # Retrieve the comma-separated list of tags
          IFS=',' read -ra two_tags <<< "${{ steps.get_tags.outputs.tags }}"
          
          # Deploy each tag with mike
          for tag in "${two_tags[@]}"; do
            echo "Deploying docs for $tag..."
            mike deploy "$tag" --push
          done

      # - name: Deploy docs for selected version
      #   run: |
      #     echo "User selected version: ${{ github.event.inputs.selected_version }}"
      #     mike deploy "${{ github.event.inputs.selected_version }}" --push

      #     # Optionally set the user-selected version as the default "latest"
      #     mike set-default latest --push
